#
# Components that have several routes should have their own file, which must
# be imported like so:
#
# routes_for_foo:
#     resource: "routing/foo.yml"
#
#

#
# Components that only require a few routes may be defined directly in this
# file, as follows:
#
# foo_controller:
#     pattern: /foo
#     defaults: { _controller: foo_sevice:method }
#
# The above will be accessed via app.php?controller=foo and it will
# instantiate the "foo_service" service and call the "method" method.
#

#
# Routes for the Post Revision Tracking feature
#

# View a post's revisions
post_revisions_view:
    pattern: /post/{id}/revisions
    defaults: { _controller: post_revisions.controller:compare }
    requirements:
        # match one or more integer characters
        id: \d+

# Compare two post revisions
post_revisions_compare:
    pattern: /post/{id}/revisions/{from}...{to}
    defaults: { _controller: post_revisions.controller:compare }
    requirements:
        id: \d+
        from: \d+
        to: \d+

# Restore a post to given revision
post_revisions_restore:
    pattern: /post/{id}/revisions/{to}
    defaults: { _controller: post_revisions.controller:compare }
    requirements:
        id: \d+
        to: \d+

# View a single revision of a post
post_revision_view:
    pattern: /post/{id}/revision/{revision_id}
    defaults: { _controller: post_revisions.controller:view_revision_as_post }
    requirements:
        id: \d+
        revision_id: \d+

# Delete a single revision of a post
post_revision_delete:
    pattern: /post/{id}/revision/{revision_id}/delete
    defaults: { _controller: post_revisions.controller:delete_revision }
    requirements:
        id: \d+
        revision_id: \d+

# Protect a single revision of a post
post_revision_protect:
    pattern: /post/{id}/revision/{revision_id}/protect
    defaults: { _controller: post_revisions.controller:protect_unprotect, mode: protect }
    requirements:
        id: \d+
        revision_id: \d+

# Unprotect a single revision of a post
post_revision_unprotect:
    pattern: /post/{id}/revision/{revision_id}/unprotect
    defaults: { _controller: post_revisions.controller:protect_unprotect, mode: unprotect }
    requirements:
        id: \d+
        revision_id: \d+

# Restore a post to given revision
post_revisions_restore:
    pattern: /post/{id}/restore/{to}
    defaults: { _controller: post_revisions.controller:restore }
    requirements:
        id: \d+
        to: \d+
